#+TITLE:        nullx002 on github
#+DATE:         [2021-05-24 Mon 19:04]
#+AUTHOR:       nullx002
#+EMAIL:        nullx002@gmail.com
#+DESCRIPTION:  index.org file for github
#+KEYWORDS:     documents, read, notes, books, code, nihon, art, origami, movies, etc.
#+LANGUAGE:     en
#+CREATOR:      GNU Emacs 27.1 (build 1, aarch64-unknown-linux-android) of 2021-03-03 (org-mode)
#+STARTUP:      showall align
#+TAGS:         {@docs(d) @notes(n)} GOOD(g) MODERATE(m) BAD(b)
#+EXCLUDE_TAGS: noexport
#+SELECT_TAGS:  export
#+OPTIONS:      H:4 num:nil toc:4
#+TEXT:         filename: -- welcome.org --
#+INCLUDE:      ~/nullx002/nullx002-github/nullx002.github.io/setup/readtheorg-l3.setup
#+EXPORT_FILE_NAME: ../../../docs/posts/code-sample/index.html

* code sample from init file

few code sample blocks to check output and html export.

*** code sample emacs lisp

#+NAME: emacs lisp
#+BEGIN_SRC elisp
    (defun stamp-time ()
    "Insert string for the current time formatted like '2:34 PM'."
    (interactive)                 ; permit invocation in minibuffer
    (insert (format-time-string "%-I:%M %p")))
    ;;(insert (format-time-string "%D %-I:%M %p"))) ;optional code

    (defun stamp-date ()
    "Insert string for today's date nicely formatted in American style, e.g. Sunday, September 17, 2000."
    (interactive) ; permit invocation in minibuffer
    (insert (format-time-string "%-I:%M %p %A, %B %e, %Y")))
#+END_SRC

#+RESULTS: init sample
: stamp-date

*** code sample python

#+NAME: python code
#+BEGIN_SRC python
# Python program to check if year is a leap year or not

year = 2000

# To get year (integer input) from the user
# year = int(input("Enter a year: "))

if (year % 4) == 0:
   if (year % 100) == 0:
       if (year % 400) == 0:
           print("{0} is a leap year".format(year))
       else:
           print("{0} is not a leap year".format(year))
   else:
       print("{0} is a leap year".format(year))
else:
   print("{0} is not a leap year".format(year))
#+END_SRC

#+RESULTS: python sample
: None


*** code sample shell script

#+NAME: schell script
#+BEGIN_SRC shell script
#!/bin/bash

echo -n "Enter a number: "
read num

if [[ $num -gt 10 ]]
then
echo "Number is greater than 10."
elif [[ $num -eq 10 ]]
then
echo "Number is equal to 10."
else
echo "Number is less than 10."
fi
#+END_SRC

#+RESULTS: schell script
: Enter a number: Number is less than 10.


** nopublish                                                 :crypt:noexport:
-----BEGIN PGP MESSAGE-----

hQGMA/HEm8plapKNAQv/fJMqeS60aFSc13O+xe4W7pqWNFRfGZsTfsoIedv7kv9Y
pcTuOpvZ801Mg2d6Y/Gcqdk3Av2fyXTYJhagyjtByPMXM48h84E43zQ+olVV+UYY
tV+JSbs0nMUhIsFG0L1GRfWm0xTNMwgClTiZOhqx7eyl8D6RmXXQi9Y3qA85+KQj
wGC3exMvgdsGI9o2OM/jGGYRIjldsWFu4nc5DutYbpxgSL+Xsup0fS4YMcFKd1iG
W8SDBDoFgsRMMH+VVeqBhvIWujh2QTNpqreL1bmQnbDjAgFmwXSBDWDGcT3Fi1Np
lzzlUw0eOtTqzFw+MRGw0Bf5KXmZGwi42EpOAMh0wUpgWeifoXT+PPqA03rDbskX
1L9b2tOaJGW2z8uN6R1p9of+VnoMEC2m3s8huHP7Fm5/BSpy40Rd7dIVRB1krV7r
1ZgvmfgEDhp2hyFSZUd71QVbZApG0WYKC74NeCZ4JtfPfn7B0JIk1ljTijjWx8sl
S0f/dO9E3F3hhh6w6R3T0lYBDR2HKC9FLgmAyNo3sPtocKjWwpsxQKL6WRC9VHm7
4k/wrk2gq705heJIRI8ZJh8q01lrDuyIdIgjpQeABI4l4ON52xyhiOfSXwt2sqwZ
HUDfVf4/Mg==
=U3Aj
-----END PGP MESSAGE-----

** local variables                                                 :noexport:

# Local Variables:
# eval: (message "welcome to nullx002 blog, get your work done")
# End:
